on:
  push:
    branches:
      - main
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]
  release:
    types: [ prereleased, released ]

name: Main
jobs:
  Pr:
    if: github.event_name == 'pull_request'
    uses: formancehq/gh-workflows/.github/workflows/pr-style.yml@main

  Lint:
    uses: formancehq/gh-workflows/.github/workflows/golang-lint.yml@main

#  Test:
#    name: Test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Install task
#        uses: arduino/setup-task@v1
#      - uses: actions/checkout@v3
#      - uses: actions/setup-go@v3
#        with:
#          go-version-file: 'go.mod'
#          cache: true
#      - name: Run tests
#        uses: nick-fields/retry@v2
#        with:
#          timeout_minutes: 10
#          max_attempts: 3
#          command: task tests
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          fail_ci_if_error: false # optional (default = false)
#          verbose: true # optional (default = false)

  Docker:
    name: 'Docker Build'
    runs-on: ubuntu-latest
    needs:
      - Lint
#      - Test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod vendor
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: "Flemzord"
          password: ${{ secrets.FLEMZORD_GITHUB_TOKEN }}
      - name: Build and push Released
        if: github.event.action == 'released'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/kopilote/castopod-operator:latest,ghcr.io/kopilote/castopod-operator:${{ github.event.release.tag_name }}
          build-args: |
            APP_SHA=${{ github.sha }}
            VERSION=${{ github.event.release.tag_name }}
      - name: Build and push PreReleased
        if: github.event.action == 'prereleased'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/kopilote/castopod-operator:${{ github.event.release.tag_name }}
          build-args: |
            APP_SHA=${{ github.sha }}
            VERSION=${{ github.event.release.tag_name }}
      - name: Build and push
        if: github.event.action != 'released' || github.event.action != 'prereleased'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/kopilote/castopod-operator:${{ github.sha }}
          build-args: |
            APP_SHA=${{ github.sha }}
            VERSION=develop